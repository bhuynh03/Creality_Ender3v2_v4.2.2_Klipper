# This file contains pin mappings for the stock 2020 Creality Ender 3
# V2. To use this config, during "make menuconfig" select the
# STM32F103 with a "28KiB bootloader" and serial (on USART1 PA10/PA9)
# communication.

# If you prefer a direct serial connection, in "make menuconfig"
# select "Enable extra low-level configuration options" and select
# serial (on USART3 PB11/PB10), which is broken out on the 10 pin IDC
# cable used for the LCD module as follows:
# 3: Tx, 4: Rx, 9: GND, 10: VCC

# Flash this firmware by copying "out/klipper.bin" to a SD card and
# turning on the printer with the card inserted. The firmware
# filename must end in ".bin" and must not match the last filename
# that was flashed.

# See docs/Config_Reference.md for a description of parameters.

[include fluidd.cfg]
[include KlackEnderRev2.cfg]
[include KAMP_Settings.cfg]
[include Adaptive_Meshing.cfg]
[include Line_Purge.cfg]
[include Smart_Park.cfg]

[virtual_sdcard]
path: /home/pi/printer_data/gcodes

[display_status]

[pause_resume]

[exclude_object]

# Enable arcs support
[gcode_arcs]
resolution: 0.1

[stepper_x]
step_pin: PC2
dir_pin: PB9
enable_pin: !PC3
microsteps: 16
rotation_distance: 40
endstop_pin: ^PA5
position_endstop: 0
position_min: 0
position_max: 235
homing_speed: 50

[stepper_y]
step_pin: PB8
dir_pin: PB7
enable_pin: !PC3
microsteps: 16
rotation_distance: 40
endstop_pin: ^PA6
position_endstop: 0
position_min: 0
position_max: 235
homing_speed: 50

[stepper_z]
step_pin: PB6
dir_pin: PB5
enable_pin: !PC3
microsteps: 16
rotation_distance: 8
endstop_pin: probe:z_virtual_endstop #original endstop_pin: ^PA7
#position_endstop: 0
position_min: -6
position_max: 250

[extruder]
max_extrude_only_distance: 100.0
step_pin: PB4
dir_pin: PB3
enable_pin: !PC3
microsteps: 16
rotation_distance: 7.441
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: PA1
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PC5
max_extrude_cross_section: 5
#control: pid
# tuned for stock hardware with 200 degree Celsius target
#pid_Kp: 21.527
#pid_Ki: 1.063
#pid_Kd: 108.982
min_extrude_temp: 0
min_temp: 0
max_temp: 260

[heater_bed]
heater_pin: PA2
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PC4
#control: pid
# tuned for stock hardware with 50 degree Celsius target
#pid_Kp: 54.027
#pid_Ki: 0.770
#pid_Kd: 948.182
min_temp: 0
max_temp: 130

[fan]
pin: PA0

[mcu]
serial: /dev/serial/by-id/usb-1a86_USB_Serial-if00-port0
restart_method: command

[printer]
kinematics: cartesian
max_velocity: 300
max_accel: 3000
max_z_velocity: 5
max_z_accel: 100

[screws_tilt_adjust]
screw1: 12, 3
screw1_name: front left screw
screw2: 182, 3
screw2_name: front right screw
screw3: 182, 173
screw3_name: rear right screw
screw4: 12, 173
screw4_name: rear left screw
horizontal_move_z: 10
speed: 50
screw_thread: CW-M4

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
# change this if you need more or less extrusion
variable_extrude: 1.0
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  ##### set park positon for x and y #####
  # default is your max posion from your printer.cfg
  {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
  {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
  ##### calculate save lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - 2.0) %}
      {% set z_safe = 2.0 %}
  {% else %}
      {% set z_safe = max_z - act_z %}
  {% endif %}
  ##### end of definitions #####
  PAUSE_BASE
  G91 # Use relative coordinates
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G1 E-{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  {% if "xyz" in printer.toolhead.homed_axes %}
    G1 Z{z_safe} F900
    G90
    G1 X{x_park} Y{y_park} F6000
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %} 

[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  #### get VELOCITY parameter if specified ####
  {% if 'VELOCITY' in params|upper %}
    {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
  {%else %}
    {% set get_params = "" %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G91 # Use relative coordinates
    G1 E{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}  
  RESUME_BASE {get_params}

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
  TURN_OFF_HEATERS
  CANCEL_PRINT_BASE
  G91 # Use relative coordinates
  G0 X180 Y180 Z20

[gcode_macro PRINT_START]
gcode:
    START_PRINT {rawparams}

[gcode_macro START_PRINT]
gcode:
    {% set BED_TEMP = params.BED_TEMP|default(70)|float %}
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(170)|float %}
    M190 S{BED_TEMP} # Heat bed for probing
    G90 # Use absolute coordinates
    M109 S160 # Set temporary nozzle temp to prevent oozing during homing
    G28 # Home all axes
    M104 S{EXTRUDER_TEMP} # Start heating extruder
    BED_MESH_CLEAR
    BED_MESH_CALIBRATE
    G0 Z10 F240 # Move z up little to prevent scratching of surface
    G0 X10 Y20 F3000
    Smart_Park #KAMP Smart Park
    M109 S{EXTRUDER_TEMP} # Wait for nozzle temp to stabilize
    LINE_PURGE # Purge nozzle
        
[gcode_macro PRINT_END]
gcode:
    END_PRINT {rawparams}

[gcode_macro END_PRINT]
gcode:
    # Turn off bed, extruder, and fan
    M140 S0
    M104 S0
    M106 S0
    # Move nozzle away from print while retracting
    G91 # Use relative coordinates
    G1 X-2 Y-2 E-3 F300
    # Raise nozzle by 10mm
    G1 Z10 F3000
    G90
    #Present print
    G1 X10 Y210 
    # Disable steppers
    M84

[gcode_macro UNLOAD_FILAMENT]
gcode:
   M83                            # set extruder to relative
   G1 X125 Y50 Z80                # move to servicing position
   G1 E10 F300                    # extrude a little to soften tip
   G1 E-10 F3000                  # jerk the filament out of the melt zone
   G1 E-50 F1800                  # retract the rest of the way
   G1 E-10 F900                   # retract the rest of the way
   M82

[gcode_macro LOAD_FILAMENT]
gcode:
   M83                            # set extruder to relative
   G1 E30 F300                    # load
   G1 E15 F150                    # prime nozzle with filament
   M82

[gcode_macro update_git]
gcode:
    RUN_SHELL_COMMAND CMD=update_git_script

[gcode_shell_command update_git_script]
command: bash -c "bash $HOME/printer_data/klipper-backup/script.sh"
timeout: 90.0
verbose: True

#test

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	0.015000, 0.000000, 0.013750
#*# 	0.021250, 0.012500, -0.005000
#*# 	0.001250, 0.007500, -0.003750
#*# x_count = 3
#*# y_count = 3
#*# mesh_x_pps = 4
#*# mesh_y_pps = 4
#*# algo = lagrange
#*# tension = 0.2
#*# min_x = 110.0
#*# max_x = 140.0
#*# min_y = 110.0
#*# max_y = 140.0
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 19.012
#*# pid_ki = 1.174
#*# pid_kd = 77.000
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 75.330
#*# pid_ki = 2.084
#*# pid_kd = 680.792
